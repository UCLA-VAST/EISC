// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4.op
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dram_C_D_to_app,hls_ip_2017_4_op,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.997000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3530,HLS_SYN_LUT=708}" *)

module dram_C_D_to_app (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
ap_continue,
        ap_idle,
        ap_ready,
        dramC_read_req_V_num_din,
        dramC_read_req_V_num_full_n,
        dramC_read_req_V_num_write,
        dramC_read_req_V_addr_din,
        dramC_read_req_V_addr_full_n,
        dramC_read_req_V_addr_write,
        dramC_read_resp_V_last_dout,
        dramC_read_resp_V_last_empty_n,
        dramC_read_resp_V_last_read,
        dramC_read_resp_V_data_V_dout,
        dramC_read_resp_V_data_V_empty_n,
        dramC_read_resp_V_data_V_read,
        dramC_write_req_data_V_last_din,
        dramC_write_req_data_V_last_full_n,
        dramC_write_req_data_V_last_write,
        dramC_write_req_data_V_data_V_din,
        dramC_write_req_data_V_data_V_full_n,
        dramC_write_req_data_V_data_V_write,
        dramC_write_req_apply_V_num_din,
        dramC_write_req_apply_V_num_full_n,
        dramC_write_req_apply_V_num_write,
        dramC_write_req_apply_V_addr_din,
        dramC_write_req_apply_V_addr_full_n,
        dramC_write_req_apply_V_addr_write,
        dramD_read_req_V_num_din,
        dramD_read_req_V_num_full_n,
        dramD_read_req_V_num_write,
        dramD_read_req_V_addr_din,
        dramD_read_req_V_addr_full_n,
        dramD_read_req_V_addr_write,
        dramD_read_resp_V_last_dout,
        dramD_read_resp_V_last_empty_n,
        dramD_read_resp_V_last_read,
        dramD_read_resp_V_data_V_dout,
        dramD_read_resp_V_data_V_empty_n,
        dramD_read_resp_V_data_V_read,
        dramD_write_req_data_V_last_din,
        dramD_write_req_data_V_last_full_n,
        dramD_write_req_data_V_last_write,
        dramD_write_req_data_V_data_V_din,
        dramD_write_req_data_V_data_V_full_n,
        dramD_write_req_data_V_data_V_write,
        dramD_write_req_apply_V_num_din,
        dramD_write_req_apply_V_num_full_n,
        dramD_write_req_apply_V_num_write,
        dramD_write_req_apply_V_addr_din,
        dramD_write_req_apply_V_addr_full_n,
        dramD_write_req_apply_V_addr_write,
        app_dram_read_req_V_num_dout,
        app_dram_read_req_V_num_empty_n,
        app_dram_read_req_V_num_read,
        app_dram_read_req_V_addr_dout,
        app_dram_read_req_V_addr_empty_n,
        app_dram_read_req_V_addr_read,
        app_dram_read_resp_V_last_din,
        app_dram_read_resp_V_last_full_n,
        app_dram_read_resp_V_last_write,
        app_dram_read_resp_V_data_V_din,
        app_dram_read_resp_V_data_V_full_n,
        app_dram_read_resp_V_data_V_write,
        app_dram_write_req_data_V_last_dout,
        app_dram_write_req_data_V_last_empty_n,
        app_dram_write_req_data_V_last_read,
        app_dram_write_req_data_V_data_V_dout,
        app_dram_write_req_data_V_data_V_empty_n,
        app_dram_write_req_data_V_data_V_read,
        app_dram_write_req_apply_V_num_dout,
        app_dram_write_req_apply_V_num_empty_n,
        app_dram_write_req_apply_V_num_read,
        app_dram_write_req_apply_V_addr_dout,
        app_dram_write_req_apply_V_addr_empty_n,
        app_dram_write_req_apply_V_addr_read
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output ap_ready; output ap_continue;
output  [7:0] dramC_read_req_V_num_din;
input   dramC_read_req_V_num_full_n;
output   dramC_read_req_V_num_write;
output  [63:0] dramC_read_req_V_addr_din;
input   dramC_read_req_V_addr_full_n;
output   dramC_read_req_V_addr_write;
input   dramC_read_resp_V_last_dout;
input   dramC_read_resp_V_last_empty_n;
output   dramC_read_resp_V_last_read;
input  [511:0] dramC_read_resp_V_data_V_dout;
input   dramC_read_resp_V_data_V_empty_n;
output   dramC_read_resp_V_data_V_read;
output   dramC_write_req_data_V_last_din;
input   dramC_write_req_data_V_last_full_n;
output   dramC_write_req_data_V_last_write;
output  [511:0] dramC_write_req_data_V_data_V_din;
input   dramC_write_req_data_V_data_V_full_n;
output   dramC_write_req_data_V_data_V_write;
output  [7:0] dramC_write_req_apply_V_num_din;
input   dramC_write_req_apply_V_num_full_n;
output   dramC_write_req_apply_V_num_write;
output  [63:0] dramC_write_req_apply_V_addr_din;
input   dramC_write_req_apply_V_addr_full_n;
output   dramC_write_req_apply_V_addr_write;
output  [7:0] dramD_read_req_V_num_din;
input   dramD_read_req_V_num_full_n;
output   dramD_read_req_V_num_write;
output  [63:0] dramD_read_req_V_addr_din;
input   dramD_read_req_V_addr_full_n;
output   dramD_read_req_V_addr_write;
input   dramD_read_resp_V_last_dout;
input   dramD_read_resp_V_last_empty_n;
output   dramD_read_resp_V_last_read;
input  [511:0] dramD_read_resp_V_data_V_dout;
input   dramD_read_resp_V_data_V_empty_n;
output   dramD_read_resp_V_data_V_read;
output   dramD_write_req_data_V_last_din;
input   dramD_write_req_data_V_last_full_n;
output   dramD_write_req_data_V_last_write;
output  [511:0] dramD_write_req_data_V_data_V_din;
input   dramD_write_req_data_V_data_V_full_n;
output   dramD_write_req_data_V_data_V_write;
output  [7:0] dramD_write_req_apply_V_num_din;
input   dramD_write_req_apply_V_num_full_n;
output   dramD_write_req_apply_V_num_write;
output  [63:0] dramD_write_req_apply_V_addr_din;
input   dramD_write_req_apply_V_addr_full_n;
output   dramD_write_req_apply_V_addr_write;
input  [7:0] app_dram_read_req_V_num_dout;
input   app_dram_read_req_V_num_empty_n;
output   app_dram_read_req_V_num_read;
input  [63:0] app_dram_read_req_V_addr_dout;
input   app_dram_read_req_V_addr_empty_n;
output   app_dram_read_req_V_addr_read;
output   app_dram_read_resp_V_last_din;
input   app_dram_read_resp_V_last_full_n;
output   app_dram_read_resp_V_last_write;
output  [511:0] app_dram_read_resp_V_data_V_din;
input   app_dram_read_resp_V_data_V_full_n;
output   app_dram_read_resp_V_data_V_write;
input   app_dram_write_req_data_V_last_dout;
input   app_dram_write_req_data_V_last_empty_n;
output   app_dram_write_req_data_V_last_read;
input  [511:0] app_dram_write_req_data_V_data_V_dout;
input   app_dram_write_req_data_V_data_V_empty_n;
output   app_dram_write_req_data_V_data_V_read;
input  [7:0] app_dram_write_req_apply_V_num_dout;
input   app_dram_write_req_apply_V_num_empty_n;
output   app_dram_write_req_apply_V_num_read;
input  [63:0] app_dram_write_req_apply_V_addr_dout;
input   app_dram_write_req_apply_V_addr_empty_n;
output   app_dram_write_req_apply_V_addr_read;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] p_029_1_reg_502;
reg   [7:0] p_029_0_s_reg_514;
reg   [0:0] valid_dram_read_req_reg_526;
reg   [0:0] valid_dram_read_resp_reg_538;
reg   [0:0] valid_dram_write_req_data_reg_550;
reg   [0:0] valid_dram_write_req_apply_reg_562;
reg   [511:0] dram_write_req_data_1_s_reg_574;
reg   [0:0] dram_write_req_data_0_s_reg_585;
reg   [511:0] dram_read_resp_1_s_reg_596;
reg   [0:0] dram_read_resp_0_s_reg_607;
reg   [63:0] p_024_1_reg_618;
reg   [7:0] p_024_0_s_reg_629;
wire   [0:0] empty_n_10_fu_904_p1;
reg   [0:0] empty_n_10_reg_1028;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] ap_phi_mux_valid_dram_read_req_phi_fu_530_p4;
wire   [0:0] empty_n_11_fu_916_p1;
reg   [0:0] empty_n_11_reg_1046;
reg   [0:0] ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4;
wire   [0:0] empty_n_12_fu_928_p1;
reg   [0:0] empty_n_12_reg_1064;
reg   [0:0] ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4;
wire   [0:0] empty_n_13_fu_940_p1;
reg   [0:0] empty_n_13_reg_1082;
reg   [0:0] ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0_subdone;
reg   [63:0] ap_phi_mux_p_029_1_2_phi_fu_675_p4;
reg   [63:0] ap_phi_mux_p_029_1_phi_fu_506_p4;
wire    ap_block_pp0_stage0;
reg   [7:0] ap_phi_mux_p_029_0_2_phi_fu_686_p4;
reg   [7:0] ap_phi_mux_p_029_0_s_phi_fu_518_p4;
reg   [0:0] ap_phi_mux_valid_dram_read_req_3_phi_fu_698_p4;
reg   [0:0] ap_phi_mux_valid_dram_read_resp_3_phi_fu_765_p4;
reg   [0:0] ap_phi_mux_valid_dram_write_req_data_3_phi_fu_832_p4;
reg   [0:0] ap_phi_mux_valid_dram_write_req_apply_3_phi_fu_897_p4;
reg   [511:0] ap_phi_mux_dram_write_req_data_1_2_phi_fu_808_p4;
reg   [0:0] ap_phi_mux_dram_write_req_data_0_2_phi_fu_820_p4;
reg   [511:0] ap_phi_mux_dram_read_resp_1_2_phi_fu_741_p4;
reg   [0:0] ap_phi_mux_dram_read_resp_0_2_phi_fu_753_p4;
reg   [63:0] ap_phi_mux_p_024_1_2_phi_fu_874_p4;
reg   [7:0] ap_phi_mux_p_024_0_2_phi_fu_885_p4;
wire   [63:0] ap_phi_reg_pp0_iter0_p_029_1_1_reg_640;
reg   [63:0] ap_phi_reg_pp0_iter1_p_029_1_1_reg_640;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_num_reg_650;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_num_reg_650;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_dram_read_req_1_reg_661;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_dram_read_req_1_reg_661;
wire   [63:0] tmp_addr_1_fu_960_p1;
reg   [63:0] ap_phi_reg_pp0_iter1_p_029_1_2_reg_671;
wire   [63:0] ap_phi_reg_pp0_iter0_p_029_1_2_reg_671;
reg   [7:0] ap_phi_reg_pp0_iter1_p_029_0_2_reg_682;
wire   [7:0] ap_phi_reg_pp0_iter0_p_029_0_2_reg_682;
wire   [0:0] p_valid_dram_read_req_1_fu_972_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_dram_read_req_3_reg_694;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_dram_read_req_3_reg_694;
reg   [511:0] ap_phi_mux_tmp_data_V_phi_fu_708_p4;
reg   [511:0] ap_phi_reg_pp0_iter1_tmp_data_V_reg_705;
wire   [511:0] ap_phi_reg_pp0_iter0_tmp_data_V_reg_705;
reg   [0:0] ap_phi_mux_tmp_last_phi_fu_719_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_last_reg_716;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_reg_716;
reg   [0:0] ap_phi_mux_valid_dram_read_resp_1_phi_fu_730_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_dram_read_resp_1_reg_727;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_dram_read_resp_1_reg_727;
reg   [511:0] ap_phi_reg_pp0_iter1_dram_read_resp_1_2_reg_737;
wire   [511:0] ap_phi_reg_pp0_iter0_dram_read_resp_1_2_reg_737;
reg   [0:0] ap_phi_reg_pp0_iter1_dram_read_resp_0_2_reg_749;
wire   [0:0] ap_phi_reg_pp0_iter0_dram_read_resp_0_2_reg_749;
wire   [0:0] p_valid_dram_read_resp_1_fu_985_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_dram_read_resp_3_reg_761;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_dram_read_resp_3_reg_761;
reg   [511:0] ap_phi_mux_tmp_data_V_2_phi_fu_775_p4;
reg   [511:0] ap_phi_reg_pp0_iter1_tmp_data_V_2_reg_772;
wire   [511:0] ap_phi_reg_pp0_iter0_tmp_data_V_2_reg_772;
reg   [0:0] ap_phi_mux_tmp_last_2_phi_fu_786_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_tmp_last_2_reg_783;
wire   [0:0] ap_phi_reg_pp0_iter0_tmp_last_2_reg_783;
reg   [0:0] ap_phi_mux_valid_dram_write_req_data_1_phi_fu_797_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_dram_write_req_data_1_reg_794;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_dram_write_req_data_1_reg_794;
reg   [511:0] ap_phi_reg_pp0_iter1_dram_write_req_data_1_2_reg_804;
wire   [511:0] ap_phi_reg_pp0_iter0_dram_write_req_data_1_2_reg_804;
reg   [0:0] ap_phi_reg_pp0_iter1_dram_write_req_data_0_2_reg_816;
wire   [0:0] ap_phi_reg_pp0_iter0_dram_write_req_data_0_2_reg_816;
wire   [0:0] p_valid_dram_write_req_data_1_fu_998_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_dram_write_req_data_3_reg_828;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_dram_write_req_data_3_reg_828;
reg   [63:0] ap_phi_mux_p_024_1_1_phi_fu_842_p4;
reg   [63:0] ap_phi_reg_pp0_iter1_p_024_1_1_reg_839;
wire   [63:0] ap_phi_reg_pp0_iter0_p_024_1_1_reg_839;
reg   [7:0] ap_phi_mux_tmp_num_2_phi_fu_852_p4;
reg   [7:0] ap_phi_reg_pp0_iter1_tmp_num_2_reg_849;
wire   [7:0] ap_phi_reg_pp0_iter0_tmp_num_2_reg_849;
reg   [0:0] ap_phi_mux_valid_dram_write_req_apply_1_phi_fu_863_p4;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_dram_write_req_apply_1_reg_860;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_dram_write_req_apply_1_reg_860;
wire   [63:0] tmp_addr_4_fu_1009_p1;
reg   [63:0] ap_phi_reg_pp0_iter1_p_024_1_2_reg_870;
wire   [63:0] ap_phi_reg_pp0_iter0_p_024_1_2_reg_870;
reg   [7:0] ap_phi_reg_pp0_iter1_p_024_0_2_reg_881;
wire   [7:0] ap_phi_reg_pp0_iter0_p_024_0_2_reg_881;
wire   [0:0] p_valid_dram_write_req_apply_1_fu_1021_p2;
reg   [0:0] ap_phi_reg_pp0_iter1_valid_dram_write_req_apply_3_reg_893;
wire   [0:0] ap_phi_reg_pp0_iter0_valid_dram_write_req_apply_3_reg_893;
reg    app_dram_read_req_V_num0_update;
wire   [0:0] empty_n_5_nbread_fu_386_p3_0;
reg    dramC_read_resp_V_last0_update;
wire   [0:0] empty_n_6_nbread_fu_394_p3_0;
reg    app_dram_write_req_data_V_last0_update;
wire   [0:0] empty_n_7_nbread_fu_402_p3_0;
reg    app_dram_write_req_apply_V_num0_update;
wire   [0:0] empty_n_8_nbread_fu_410_p3_0;
reg    dramD_read_resp_V_last0_update;
wire   [0:0] empty_n_nbread_fu_418_p3_0;
reg    dramD_read_req_V_num1_update;
wire   [0:0] empty_n_1_fu_952_p1;
wire    ap_block_pp0_stage0_01001;
reg    dramD_write_req_data_V_last1_update;
reg    dramD_write_req_apply_V_num1_update;
reg    dramC_read_req_V_num1_update;
wire   [0:0] full_n_nbwrite_fu_462_p5;
reg    app_dram_read_resp_V_last1_update;
wire   [0:0] full_n_1_nbwrite_fu_472_p5;
reg    dramC_write_req_data_V_last1_update;
wire   [0:0] full_n_2_nbwrite_fu_482_p5;
reg    dramC_write_req_apply_V_num1_update;
wire   [0:0] full_n_3_nbwrite_fu_492_p5;
wire   [31:0] dram_read_req_addr_fu_956_p1;
wire   [0:0] not_full_n_i9_fu_966_p2;
wire   [0:0] not_full_n_i_fu_979_p2;
wire   [0:0] not_full_n_i1_fu_992_p2;
wire   [31:0] dram_write_req_apply_addr_fu_1005_p1;
wire   [0:0] not_full_n_i2_fu_1015_p2;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_278;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4 == 1'd0) & (empty_n_11_fu_916_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_dram_read_resp_0_2_reg_749 <= dramC_read_resp_V_last_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_dram_read_resp_0_2_reg_749 <= ap_phi_reg_pp0_iter0_dram_read_resp_0_2_reg_749;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4 == 1'd0) & (empty_n_11_fu_916_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_dram_read_resp_1_2_reg_737 <= dramC_read_resp_V_data_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_dram_read_resp_1_2_reg_737 <= ap_phi_reg_pp0_iter0_dram_read_resp_1_2_reg_737;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4 == 1'd0) & (empty_n_12_fu_928_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_dram_write_req_data_0_2_reg_816 <= app_dram_write_req_data_V_last_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_dram_write_req_data_0_2_reg_816 <= ap_phi_reg_pp0_iter0_dram_write_req_data_0_2_reg_816;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4 == 1'd0) & (empty_n_12_fu_928_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_dram_write_req_data_1_2_reg_804 <= app_dram_write_req_data_V_data_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_dram_write_req_data_1_2_reg_804 <= ap_phi_reg_pp0_iter0_dram_write_req_data_1_2_reg_804;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4 == 1'd0) & (empty_n_13_fu_940_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_024_0_2_reg_881 <= app_dram_write_req_apply_V_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_024_0_2_reg_881 <= ap_phi_reg_pp0_iter0_p_024_0_2_reg_881;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_13_fu_940_p1 == 1'd1) & (ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_024_1_1_reg_839 <= app_dram_write_req_apply_V_addr_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_024_1_1_reg_839 <= ap_phi_reg_pp0_iter0_p_024_1_1_reg_839;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4 == 1'd0) & (empty_n_13_fu_940_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_024_1_2_reg_870 <= app_dram_write_req_apply_V_addr_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_024_1_2_reg_870 <= ap_phi_reg_pp0_iter0_p_024_1_2_reg_870;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd0) & (empty_n_10_fu_904_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_029_0_2_reg_682 <= app_dram_read_req_V_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_029_0_2_reg_682 <= ap_phi_reg_pp0_iter0_p_029_0_2_reg_682;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd0) & (empty_n_10_fu_904_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_p_029_1_1_reg_640 <= app_dram_read_req_V_addr_dout;
        end else if ((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_p_029_1_1_reg_640 <= ap_phi_mux_p_029_1_phi_fu_506_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_029_1_1_reg_640 <= ap_phi_reg_pp0_iter0_p_029_1_1_reg_640;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd0) & (empty_n_10_fu_904_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_p_029_1_2_reg_671 <= app_dram_read_req_V_addr_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_p_029_1_2_reg_671 <= ap_phi_reg_pp0_iter0_p_029_1_2_reg_671;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_12_fu_928_p1 == 1'd1) & (ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_2_reg_772 <= app_dram_write_req_data_V_data_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_2_reg_772 <= ap_phi_reg_pp0_iter0_tmp_data_V_2_reg_772;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_11_fu_916_p1 == 1'd1) & (ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_705 <= dramC_read_resp_V_data_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_data_V_reg_705 <= ap_phi_reg_pp0_iter0_tmp_data_V_reg_705;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_12_fu_928_p1 == 1'd1) & (ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_last_2_reg_783 <= app_dram_write_req_data_V_last_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_last_2_reg_783 <= ap_phi_reg_pp0_iter0_tmp_last_2_reg_783;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_11_fu_916_p1 == 1'd1) & (ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_last_reg_716 <= dramC_read_resp_V_last_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_last_reg_716 <= ap_phi_reg_pp0_iter0_tmp_last_reg_716;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_13_fu_940_p1 == 1'd1) & (ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_tmp_num_2_reg_849 <= app_dram_write_req_apply_V_num_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_num_2_reg_849 <= ap_phi_reg_pp0_iter0_tmp_num_2_reg_849;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd0) & (empty_n_10_fu_904_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_tmp_num_reg_650 <= app_dram_read_req_V_num_dout;
        end else if ((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_tmp_num_reg_650 <= ap_phi_mux_p_029_0_s_phi_fu_518_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_tmp_num_reg_650 <= ap_phi_reg_pp0_iter0_tmp_num_reg_650;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd0) & (empty_n_10_fu_904_p1 == 1'd1))) begin
            ap_phi_reg_pp0_iter1_valid_dram_read_req_1_reg_661 <= empty_n_5_nbread_fu_386_p3_0;
        end else if ((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd1)) begin
            ap_phi_reg_pp0_iter1_valid_dram_read_req_1_reg_661 <= ap_phi_mux_valid_dram_read_req_phi_fu_530_p4;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_dram_read_req_1_reg_661 <= ap_phi_reg_pp0_iter0_valid_dram_read_req_1_reg_661;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd0) & (empty_n_10_fu_904_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_dram_read_req_3_reg_694 <= empty_n_5_nbread_fu_386_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_dram_read_req_3_reg_694 <= ap_phi_reg_pp0_iter0_valid_dram_read_req_3_reg_694;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_11_fu_916_p1 == 1'd1) & (ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_dram_read_resp_1_reg_727 <= empty_n_6_nbread_fu_394_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_dram_read_resp_1_reg_727 <= ap_phi_reg_pp0_iter0_valid_dram_read_resp_1_reg_727;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4 == 1'd0) & (empty_n_11_fu_916_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_dram_read_resp_3_reg_761 <= empty_n_6_nbread_fu_394_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_dram_read_resp_3_reg_761 <= ap_phi_reg_pp0_iter0_valid_dram_read_resp_3_reg_761;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_13_fu_940_p1 == 1'd1) & (ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_dram_write_req_apply_1_reg_860 <= empty_n_8_nbread_fu_410_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_dram_write_req_apply_1_reg_860 <= ap_phi_reg_pp0_iter0_valid_dram_write_req_apply_1_reg_860;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4 == 1'd0) & (empty_n_13_fu_940_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_dram_write_req_apply_3_reg_893 <= empty_n_8_nbread_fu_410_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_dram_write_req_apply_3_reg_893 <= ap_phi_reg_pp0_iter0_valid_dram_write_req_apply_3_reg_893;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((empty_n_12_fu_928_p1 == 1'd1) & (ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_dram_write_req_data_1_reg_794 <= empty_n_7_nbread_fu_402_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_dram_write_req_data_1_reg_794 <= ap_phi_reg_pp0_iter0_valid_dram_write_req_data_1_reg_794;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_278)) begin
        if (((ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4 == 1'd0) & (empty_n_12_fu_928_p1 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_valid_dram_write_req_data_3_reg_828 <= empty_n_7_nbread_fu_402_p3_0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_valid_dram_write_req_data_3_reg_828 <= ap_phi_reg_pp0_iter0_valid_dram_write_req_data_3_reg_828;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        valid_dram_read_req_reg_526 <= ap_phi_mux_valid_dram_read_req_3_phi_fu_698_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_dram_read_req_reg_526 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        valid_dram_read_resp_reg_538 <= ap_phi_mux_valid_dram_read_resp_3_phi_fu_765_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_dram_read_resp_reg_538 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        valid_dram_write_req_apply_reg_562 <= ap_phi_mux_valid_dram_write_req_apply_3_phi_fu_897_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_dram_write_req_apply_reg_562 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        valid_dram_write_req_data_reg_550 <= ap_phi_mux_valid_dram_write_req_data_3_phi_fu_832_p4;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        valid_dram_write_req_data_reg_550 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dram_read_resp_0_s_reg_607 <= ap_phi_mux_dram_read_resp_0_2_phi_fu_753_p4;
        dram_read_resp_1_s_reg_596 <= ap_phi_mux_dram_read_resp_1_2_phi_fu_741_p4;
        dram_write_req_data_0_s_reg_585 <= ap_phi_mux_dram_write_req_data_0_2_phi_fu_820_p4;
        dram_write_req_data_1_s_reg_574 <= ap_phi_mux_dram_write_req_data_1_2_phi_fu_808_p4;
        p_024_0_s_reg_629 <= ap_phi_mux_p_024_0_2_phi_fu_885_p4;
        p_024_1_reg_618 <= ap_phi_mux_p_024_1_2_phi_fu_874_p4;
        p_029_0_s_reg_514 <= ap_phi_mux_p_029_0_2_phi_fu_686_p4;
        p_029_1_reg_502 <= ap_phi_mux_p_029_1_2_phi_fu_675_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_10_reg_1028 <= empty_n_5_nbread_fu_386_p3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_11_reg_1046 <= empty_n_6_nbread_fu_394_p3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_12_reg_1064 <= empty_n_7_nbread_fu_402_p3_0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_n_13_reg_1082 <= empty_n_8_nbread_fu_410_p3_0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_11_reg_1046 == 1'd1) | (valid_dram_read_resp_reg_538 == 1'd1)))) begin
        ap_phi_mux_dram_read_resp_0_2_phi_fu_753_p4 = ap_phi_mux_tmp_last_phi_fu_719_p4;
    end else begin
        ap_phi_mux_dram_read_resp_0_2_phi_fu_753_p4 = ap_phi_reg_pp0_iter1_dram_read_resp_0_2_reg_749;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_11_reg_1046 == 1'd1) | (valid_dram_read_resp_reg_538 == 1'd1)))) begin
        ap_phi_mux_dram_read_resp_1_2_phi_fu_741_p4 = ap_phi_mux_tmp_data_V_phi_fu_708_p4;
    end else begin
        ap_phi_mux_dram_read_resp_1_2_phi_fu_741_p4 = ap_phi_reg_pp0_iter1_dram_read_resp_1_2_reg_737;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_12_reg_1064 == 1'd1) | (valid_dram_write_req_data_reg_550 == 1'd1)))) begin
        ap_phi_mux_dram_write_req_data_0_2_phi_fu_820_p4 = ap_phi_mux_tmp_last_2_phi_fu_786_p4;
    end else begin
        ap_phi_mux_dram_write_req_data_0_2_phi_fu_820_p4 = ap_phi_reg_pp0_iter1_dram_write_req_data_0_2_reg_816;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_12_reg_1064 == 1'd1) | (valid_dram_write_req_data_reg_550 == 1'd1)))) begin
        ap_phi_mux_dram_write_req_data_1_2_phi_fu_808_p4 = ap_phi_mux_tmp_data_V_2_phi_fu_775_p4;
    end else begin
        ap_phi_mux_dram_write_req_data_1_2_phi_fu_808_p4 = ap_phi_reg_pp0_iter1_dram_write_req_data_1_2_reg_804;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_13_reg_1082 == 1'd1) | (valid_dram_write_req_apply_reg_562 == 1'd1)))) begin
        ap_phi_mux_p_024_0_2_phi_fu_885_p4 = ap_phi_mux_tmp_num_2_phi_fu_852_p4;
    end else begin
        ap_phi_mux_p_024_0_2_phi_fu_885_p4 = ap_phi_reg_pp0_iter1_p_024_0_2_reg_881;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_dram_write_req_apply_reg_562 == 1'd1))) begin
        ap_phi_mux_p_024_1_1_phi_fu_842_p4 = p_024_1_reg_618;
    end else begin
        ap_phi_mux_p_024_1_1_phi_fu_842_p4 = ap_phi_reg_pp0_iter1_p_024_1_1_reg_839;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_13_reg_1082 == 1'd1) | (valid_dram_write_req_apply_reg_562 == 1'd1)))) begin
        ap_phi_mux_p_024_1_2_phi_fu_874_p4 = tmp_addr_4_fu_1009_p1;
    end else begin
        ap_phi_mux_p_024_1_2_phi_fu_874_p4 = ap_phi_reg_pp0_iter1_p_024_1_2_reg_870;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_10_reg_1028 == 1'd1) | (valid_dram_read_req_reg_526 == 1'd1)))) begin
        ap_phi_mux_p_029_0_2_phi_fu_686_p4 = ap_phi_reg_pp0_iter1_tmp_num_reg_650;
    end else begin
        ap_phi_mux_p_029_0_2_phi_fu_686_p4 = ap_phi_reg_pp0_iter1_p_029_0_2_reg_682;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_p_029_0_s_phi_fu_518_p4 = ap_phi_mux_p_029_0_2_phi_fu_686_p4;
    end else begin
        ap_phi_mux_p_029_0_s_phi_fu_518_p4 = p_029_0_s_reg_514;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_10_reg_1028 == 1'd1) | (valid_dram_read_req_reg_526 == 1'd1)))) begin
        ap_phi_mux_p_029_1_2_phi_fu_675_p4 = tmp_addr_1_fu_960_p1;
    end else begin
        ap_phi_mux_p_029_1_2_phi_fu_675_p4 = ap_phi_reg_pp0_iter1_p_029_1_2_reg_671;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_p_029_1_phi_fu_506_p4 = ap_phi_mux_p_029_1_2_phi_fu_675_p4;
    end else begin
        ap_phi_mux_p_029_1_phi_fu_506_p4 = p_029_1_reg_502;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_dram_write_req_data_reg_550 == 1'd1))) begin
        ap_phi_mux_tmp_data_V_2_phi_fu_775_p4 = dram_write_req_data_1_s_reg_574;
    end else begin
        ap_phi_mux_tmp_data_V_2_phi_fu_775_p4 = ap_phi_reg_pp0_iter1_tmp_data_V_2_reg_772;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_dram_read_resp_reg_538 == 1'd1))) begin
        ap_phi_mux_tmp_data_V_phi_fu_708_p4 = dram_read_resp_1_s_reg_596;
    end else begin
        ap_phi_mux_tmp_data_V_phi_fu_708_p4 = ap_phi_reg_pp0_iter1_tmp_data_V_reg_705;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_dram_write_req_data_reg_550 == 1'd1))) begin
        ap_phi_mux_tmp_last_2_phi_fu_786_p4 = dram_write_req_data_0_s_reg_585;
    end else begin
        ap_phi_mux_tmp_last_2_phi_fu_786_p4 = ap_phi_reg_pp0_iter1_tmp_last_2_reg_783;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_dram_read_resp_reg_538 == 1'd1))) begin
        ap_phi_mux_tmp_last_phi_fu_719_p4 = dram_read_resp_0_s_reg_607;
    end else begin
        ap_phi_mux_tmp_last_phi_fu_719_p4 = ap_phi_reg_pp0_iter1_tmp_last_reg_716;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_dram_write_req_apply_reg_562 == 1'd1))) begin
        ap_phi_mux_tmp_num_2_phi_fu_852_p4 = p_024_0_s_reg_629;
    end else begin
        ap_phi_mux_tmp_num_2_phi_fu_852_p4 = ap_phi_reg_pp0_iter1_tmp_num_2_reg_849;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_10_reg_1028 == 1'd1) | (valid_dram_read_req_reg_526 == 1'd1)))) begin
        ap_phi_mux_valid_dram_read_req_3_phi_fu_698_p4 = p_valid_dram_read_req_1_fu_972_p2;
    end else begin
        ap_phi_mux_valid_dram_read_req_3_phi_fu_698_p4 = ap_phi_reg_pp0_iter1_valid_dram_read_req_3_reg_694;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 = ap_phi_mux_valid_dram_read_req_3_phi_fu_698_p4;
    end else begin
        ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 = valid_dram_read_req_reg_526;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_dram_read_resp_reg_538 == 1'd1))) begin
        ap_phi_mux_valid_dram_read_resp_1_phi_fu_730_p4 = valid_dram_read_resp_reg_538;
    end else begin
        ap_phi_mux_valid_dram_read_resp_1_phi_fu_730_p4 = ap_phi_reg_pp0_iter1_valid_dram_read_resp_1_reg_727;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_11_reg_1046 == 1'd1) | (valid_dram_read_resp_reg_538 == 1'd1)))) begin
        ap_phi_mux_valid_dram_read_resp_3_phi_fu_765_p4 = p_valid_dram_read_resp_1_fu_985_p2;
    end else begin
        ap_phi_mux_valid_dram_read_resp_3_phi_fu_765_p4 = ap_phi_reg_pp0_iter1_valid_dram_read_resp_3_reg_761;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4 = ap_phi_mux_valid_dram_read_resp_3_phi_fu_765_p4;
    end else begin
        ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4 = valid_dram_read_resp_reg_538;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_dram_write_req_apply_reg_562 == 1'd1))) begin
        ap_phi_mux_valid_dram_write_req_apply_1_phi_fu_863_p4 = valid_dram_write_req_apply_reg_562;
    end else begin
        ap_phi_mux_valid_dram_write_req_apply_1_phi_fu_863_p4 = ap_phi_reg_pp0_iter1_valid_dram_write_req_apply_1_reg_860;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_13_reg_1082 == 1'd1) | (valid_dram_write_req_apply_reg_562 == 1'd1)))) begin
        ap_phi_mux_valid_dram_write_req_apply_3_phi_fu_897_p4 = p_valid_dram_write_req_apply_1_fu_1021_p2;
    end else begin
        ap_phi_mux_valid_dram_write_req_apply_3_phi_fu_897_p4 = ap_phi_reg_pp0_iter1_valid_dram_write_req_apply_3_reg_893;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4 = ap_phi_mux_valid_dram_write_req_apply_3_phi_fu_897_p4;
    end else begin
        ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4 = valid_dram_write_req_apply_reg_562;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (valid_dram_write_req_data_reg_550 == 1'd1))) begin
        ap_phi_mux_valid_dram_write_req_data_1_phi_fu_797_p4 = valid_dram_write_req_data_reg_550;
    end else begin
        ap_phi_mux_valid_dram_write_req_data_1_phi_fu_797_p4 = ap_phi_reg_pp0_iter1_valid_dram_write_req_data_1_reg_794;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((empty_n_12_reg_1064 == 1'd1) | (valid_dram_write_req_data_reg_550 == 1'd1)))) begin
        ap_phi_mux_valid_dram_write_req_data_3_phi_fu_832_p4 = p_valid_dram_write_req_data_1_fu_998_p2;
    end else begin
        ap_phi_mux_valid_dram_write_req_data_3_phi_fu_832_p4 = ap_phi_reg_pp0_iter1_valid_dram_write_req_data_3_reg_828;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4 = ap_phi_mux_valid_dram_write_req_data_3_phi_fu_832_p4;
    end else begin
        ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4 = valid_dram_write_req_data_reg_550;
    end
end

always @ (*) begin
    if (((ap_phi_mux_valid_dram_read_req_phi_fu_530_p4 == 1'd0) & ((app_dram_read_req_V_num_empty_n & app_dram_read_req_V_addr_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        app_dram_read_req_V_num0_update = 1'b1;
    end else begin
        app_dram_read_req_V_num0_update = 1'b0;
    end
end

always @ (*) begin
    if ((((app_dram_read_resp_V_last_full_n & app_dram_read_resp_V_data_V_full_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & ((empty_n_11_reg_1046 == 1'd1) | (valid_dram_read_resp_reg_538 == 1'd1)))) begin
        app_dram_read_resp_V_last1_update = 1'b1;
    end else begin
        app_dram_read_resp_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_valid_dram_write_req_apply_phi_fu_566_p4 == 1'd0) & ((app_dram_write_req_apply_V_num_empty_n & app_dram_write_req_apply_V_addr_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        app_dram_write_req_apply_V_num0_update = 1'b1;
    end else begin
        app_dram_write_req_apply_V_num0_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_valid_dram_write_req_data_phi_fu_554_p4 == 1'd0) & ((app_dram_write_req_data_V_last_empty_n & app_dram_write_req_data_V_data_V_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        app_dram_write_req_data_V_last0_update = 1'b1;
    end else begin
        app_dram_write_req_data_V_last0_update = 1'b0;
    end
end

always @ (*) begin
    if ((((dramC_read_req_V_num_full_n & dramC_read_req_V_addr_full_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & ((empty_n_10_reg_1028 == 1'd1) | (valid_dram_read_req_reg_526 == 1'd1)))) begin
        dramC_read_req_V_num1_update = 1'b1;
    end else begin
        dramC_read_req_V_num1_update = 1'b0;
    end
end

always @ (*) begin
    if (((ap_phi_mux_valid_dram_read_resp_phi_fu_542_p4 == 1'd0) & ((dramC_read_resp_V_last_empty_n & dramC_read_resp_V_data_V_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dramC_read_resp_V_last0_update = 1'b1;
    end else begin
        dramC_read_resp_V_last0_update = 1'b0;
    end
end

always @ (*) begin
    if ((((dramC_write_req_apply_V_num_full_n & dramC_write_req_apply_V_addr_full_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & ((empty_n_13_reg_1082 == 1'd1) | (valid_dram_write_req_apply_reg_562 == 1'd1)))) begin
        dramC_write_req_apply_V_num1_update = 1'b1;
    end else begin
        dramC_write_req_apply_V_num1_update = 1'b0;
    end
end

always @ (*) begin
    if ((((dramC_write_req_data_V_last_full_n & dramC_write_req_data_V_data_V_full_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & ((empty_n_12_reg_1064 == 1'd1) | (valid_dram_write_req_data_reg_550 == 1'd1)))) begin
        dramC_write_req_data_V_last1_update = 1'b1;
    end else begin
        dramC_write_req_data_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    if (((empty_n_1_fu_952_p1 == 1'd1) & ((dramD_read_req_V_num_full_n & dramD_read_req_V_addr_full_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dramD_read_req_V_num1_update = 1'b1;
    end else begin
        dramD_read_req_V_num1_update = 1'b0;
    end
end

always @ (*) begin
    if ((((dramD_read_resp_V_last_empty_n & dramD_read_resp_V_data_V_empty_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dramD_read_resp_V_last0_update = 1'b1;
    end else begin
        dramD_read_resp_V_last0_update = 1'b0;
    end
end

always @ (*) begin
    if (((empty_n_1_fu_952_p1 == 1'd1) & ((dramD_write_req_apply_V_num_full_n & dramD_write_req_apply_V_addr_full_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dramD_write_req_apply_V_num1_update = 1'b1;
    end else begin
        dramD_write_req_apply_V_num1_update = 1'b0;
    end
end

always @ (*) begin
    if (((empty_n_1_fu_952_p1 == 1'd1) & ((dramD_write_req_data_V_last_full_n & dramD_write_req_data_V_data_V_full_n) == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dramD_write_req_data_V_last1_update = 1'b1;
    end else begin
        dramD_write_req_data_V_last1_update = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_278 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_done = 1'b0;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_dram_read_resp_0_2_reg_749 = 'bx;

assign ap_phi_reg_pp0_iter0_dram_read_resp_1_2_reg_737 = 'bx;

assign ap_phi_reg_pp0_iter0_dram_write_req_data_0_2_reg_816 = 'bx;

assign ap_phi_reg_pp0_iter0_dram_write_req_data_1_2_reg_804 = 'bx;

assign ap_phi_reg_pp0_iter0_p_024_0_2_reg_881 = 'bx;

assign ap_phi_reg_pp0_iter0_p_024_1_1_reg_839 = 'bx;

assign ap_phi_reg_pp0_iter0_p_024_1_2_reg_870 = 'bx;

assign ap_phi_reg_pp0_iter0_p_029_0_2_reg_682 = 'bx;

assign ap_phi_reg_pp0_iter0_p_029_1_1_reg_640 = 'bx;

assign ap_phi_reg_pp0_iter0_p_029_1_2_reg_671 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_data_V_2_reg_772 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_data_V_reg_705 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_2_reg_783 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_last_reg_716 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_num_2_reg_849 = 'bx;

assign ap_phi_reg_pp0_iter0_tmp_num_reg_650 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_dram_read_req_1_reg_661 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_dram_read_req_3_reg_694 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_dram_read_resp_1_reg_727 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_dram_read_resp_3_reg_761 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_dram_write_req_apply_1_reg_860 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_dram_write_req_apply_3_reg_893 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_dram_write_req_data_1_reg_794 = 'bx;

assign ap_phi_reg_pp0_iter0_valid_dram_write_req_data_3_reg_828 = 'bx;

assign ap_ready = 1'b0;

assign app_dram_read_req_V_addr_read = app_dram_read_req_V_num0_update;

assign app_dram_read_req_V_num_read = app_dram_read_req_V_num0_update;

assign app_dram_read_resp_V_data_V_din = ap_phi_mux_tmp_data_V_phi_fu_708_p4;

assign app_dram_read_resp_V_data_V_write = app_dram_read_resp_V_last1_update;

assign app_dram_read_resp_V_last_din = ap_phi_mux_tmp_last_phi_fu_719_p4;

assign app_dram_read_resp_V_last_write = app_dram_read_resp_V_last1_update;

assign app_dram_write_req_apply_V_addr_read = app_dram_write_req_apply_V_num0_update;

assign app_dram_write_req_apply_V_num_read = app_dram_write_req_apply_V_num0_update;

assign app_dram_write_req_data_V_data_V_read = app_dram_write_req_data_V_last0_update;

assign app_dram_write_req_data_V_last_read = app_dram_write_req_data_V_last0_update;

assign dramC_read_req_V_addr_din = dram_read_req_addr_fu_956_p1;

assign dramC_read_req_V_addr_write = dramC_read_req_V_num1_update;

assign dramC_read_req_V_num_din = ap_phi_reg_pp0_iter1_tmp_num_reg_650;

assign dramC_read_req_V_num_write = dramC_read_req_V_num1_update;

assign dramC_read_resp_V_data_V_read = dramC_read_resp_V_last0_update;

assign dramC_read_resp_V_last_read = dramC_read_resp_V_last0_update;

assign dramC_write_req_apply_V_addr_din = dram_write_req_apply_addr_fu_1005_p1;

assign dramC_write_req_apply_V_addr_write = dramC_write_req_apply_V_num1_update;

assign dramC_write_req_apply_V_num_din = ap_phi_mux_tmp_num_2_phi_fu_852_p4;

assign dramC_write_req_apply_V_num_write = dramC_write_req_apply_V_num1_update;

assign dramC_write_req_data_V_data_V_din = ap_phi_mux_tmp_data_V_2_phi_fu_775_p4;

assign dramC_write_req_data_V_data_V_write = dramC_write_req_data_V_last1_update;

assign dramC_write_req_data_V_last_din = ap_phi_mux_tmp_last_2_phi_fu_786_p4;

assign dramC_write_req_data_V_last_write = dramC_write_req_data_V_last1_update;

assign dramD_read_req_V_addr_din = 64'd0;

assign dramD_read_req_V_addr_write = dramD_read_req_V_num1_update;

assign dramD_read_req_V_num_din = 8'd0;

assign dramD_read_req_V_num_write = dramD_read_req_V_num1_update;

assign dramD_read_resp_V_data_V_read = dramD_read_resp_V_last0_update;

assign dramD_read_resp_V_last_read = dramD_read_resp_V_last0_update;

assign dramD_write_req_apply_V_addr_din = 64'd0;

assign dramD_write_req_apply_V_addr_write = dramD_write_req_apply_V_num1_update;

assign dramD_write_req_apply_V_num_din = 8'd0;

assign dramD_write_req_apply_V_num_write = dramD_write_req_apply_V_num1_update;

assign dramD_write_req_data_V_data_V_din = 512'd0;

assign dramD_write_req_data_V_data_V_write = dramD_write_req_data_V_last1_update;

assign dramD_write_req_data_V_last_din = 1'd0;

assign dramD_write_req_data_V_last_write = dramD_write_req_data_V_last1_update;

assign dram_read_req_addr_fu_956_p1 = ap_phi_reg_pp0_iter1_p_029_1_1_reg_640[31:0];

assign dram_write_req_apply_addr_fu_1005_p1 = ap_phi_mux_p_024_1_1_phi_fu_842_p4[31:0];

assign empty_n_10_fu_904_p1 = empty_n_5_nbread_fu_386_p3_0;

assign empty_n_11_fu_916_p1 = empty_n_6_nbread_fu_394_p3_0;

assign empty_n_12_fu_928_p1 = empty_n_7_nbread_fu_402_p3_0;

assign empty_n_13_fu_940_p1 = empty_n_8_nbread_fu_410_p3_0;

assign empty_n_1_fu_952_p1 = empty_n_nbread_fu_418_p3_0;

assign empty_n_5_nbread_fu_386_p3_0 = (app_dram_read_req_V_num_empty_n & app_dram_read_req_V_addr_empty_n);

assign empty_n_6_nbread_fu_394_p3_0 = (dramC_read_resp_V_last_empty_n & dramC_read_resp_V_data_V_empty_n);

assign empty_n_7_nbread_fu_402_p3_0 = (app_dram_write_req_data_V_last_empty_n & app_dram_write_req_data_V_data_V_empty_n);

assign empty_n_8_nbread_fu_410_p3_0 = (app_dram_write_req_apply_V_num_empty_n & app_dram_write_req_apply_V_addr_empty_n);

assign empty_n_nbread_fu_418_p3_0 = (dramD_read_resp_V_last_empty_n & dramD_read_resp_V_data_V_empty_n);

assign full_n_1_nbwrite_fu_472_p5 = (app_dram_read_resp_V_last_full_n & app_dram_read_resp_V_data_V_full_n);

assign full_n_2_nbwrite_fu_482_p5 = (dramC_write_req_data_V_last_full_n & dramC_write_req_data_V_data_V_full_n);

assign full_n_3_nbwrite_fu_492_p5 = (dramC_write_req_apply_V_num_full_n & dramC_write_req_apply_V_addr_full_n);

assign full_n_nbwrite_fu_462_p5 = (dramC_read_req_V_num_full_n & dramC_read_req_V_addr_full_n);

assign not_full_n_i1_fu_992_p2 = (full_n_2_nbwrite_fu_482_p5 ^ 1'd1);

assign not_full_n_i2_fu_1015_p2 = (full_n_3_nbwrite_fu_492_p5 ^ 1'd1);

assign not_full_n_i9_fu_966_p2 = (full_n_nbwrite_fu_462_p5 ^ 1'd1);

assign not_full_n_i_fu_979_p2 = (full_n_1_nbwrite_fu_472_p5 ^ 1'd1);

assign p_valid_dram_read_req_1_fu_972_p2 = (not_full_n_i9_fu_966_p2 & ap_phi_reg_pp0_iter1_valid_dram_read_req_1_reg_661);

assign p_valid_dram_read_resp_1_fu_985_p2 = (not_full_n_i_fu_979_p2 & ap_phi_mux_valid_dram_read_resp_1_phi_fu_730_p4);

assign p_valid_dram_write_req_apply_1_fu_1021_p2 = (not_full_n_i2_fu_1015_p2 & ap_phi_mux_valid_dram_write_req_apply_1_phi_fu_863_p4);

assign p_valid_dram_write_req_data_1_fu_998_p2 = (not_full_n_i1_fu_992_p2 & ap_phi_mux_valid_dram_write_req_data_1_phi_fu_797_p4);

assign tmp_addr_1_fu_960_p1 = dram_read_req_addr_fu_956_p1;

assign tmp_addr_4_fu_1009_p1 = dram_write_req_apply_addr_fu_1005_p1;

endmodule //dram_C_D_to_app
